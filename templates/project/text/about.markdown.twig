#### Introduktion

Det här är min projekt-sida för mvc-kursen. Den handlar om en av "de 17 Globala målen" - god hälsa och välbefinnande. Det är ett brett ämne med några delmål så jag fokuserade på det som alla föräldrar kan tycka är ganska viktigt, dvs mödra- och barndödlighet. Här hittar ni dokumentation av projektet ich dess kod. Längst ned finns det dessutom möjlighet att återställa databasen. 

#### Dokumentation

[PhpDocs](http://www.student.bth.se/~mabn21/dbwebb-kurser/mvc/me/report/docs/api/)

[PhpMetrics](http://www.student.bth.se/~mabn21/dbwebb-kurser/mvc/me/report/docs/metrics/)

[GitHub repo](https://github.com/marlenabazan/mvc.git)


#### Scrutinizer

[![Build Status](https://scrutinizer-ci.com/g/marlenabazan/mvc/badges/build.png?b=main)](https://scrutinizer-ci.com/g/marlenabazan/mvc/build-status/main) [![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/marlenabazan/mvc/badges/quality-score.png?b=main)](https://scrutinizer-ci.com/g/marlenabazan/mvc/?branch=main) [![Code Coverage](https://scrutinizer-ci.com/g/marlenabazan/mvc/badges/coverage.png?b=main)](https://scrutinizer-ci.com/g/marlenabazan/mvc/?branch=main) 

Projektets kodkvalitet bedömer jag som relativt bra. Jag har fokuserat på att hålla controllers så små som möjligt och att mina klasser inte skulle vara för komplexa. Jag använde mig av PhpMetrics och Scrutinizer. Komplexiteten på mitt projekt överstiger inte 10. Den högsta komplexiteten har ReadData-klassen (8). Alla andra klasser, controller och annat som tillhör projektet har komplexiteten mellan 1 och 3. 

#### Clean code
[Här]({{ url("cleancode") }}) hittar ni min artikel om snygg och god kod.

#### Återställ databasen
Tryck [här]({{ url("reset") }}) för att återställa databsen till dess ursprungliga läge.