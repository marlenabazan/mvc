<h3><u>kmom06</u></h3>

**Hur uppfattade du verktyget phpmetrics och fann du några särskilda bitar mer värdefulla än andra? Var det några särskilda metrics eller bilder du uppskattade?**<br>
Jag vet fortfarande inte vad några av värdena i tabellerna betyder men jag vet dem viktigaste som vi jobbade med i detta kmom - complexity, coupling och cohesion. Jag uppfattade verktyget som användbar och användarvänlig. Allt presenteras fint och tydligt så man hittar snabbt det man letar efter.

**Berätta hur det gick att integrera med Scrutinizer och vilken är din första känsla av verktyget och dess badges? Vilken kodtäckning och kodkvalitet fick du efter första bygget?**<br>
Att integrera med Scrutinizer gick bra. Sedan blev det lite värre. Den betygsatt min kod ganska dålig eftersom den räknar hela koden som kommer med ramverket t.o.m klasser som jag inte skrivit och som rankades jättelågt. Efter första bygget fick jag 6,19 på kodkvalitet och kodtäckning endast 16%. Jag skrev några tester på mina controllers och ökade min kodtäckning till 60%. Jag siktade på att få en grön badge men jag landade precis på gränsen.

**Hur är din egen syn på kodkvalitet, berätta lite om den? Tror du man kan man påvisa kodkvalitet i någon viss mån med badges eller vad tror du?**<br>
Jag tror att man kan påvisa kodkvalitet i någon viss mån med badges men det är inget man ska lita blint på. Nu när jag tänker på det så gissar jag att det finns något sätt att säga till Scrutinizer vilka filer som ska testas. Då skulle betyget vara mer pålitligt. Jag tror att det är värt att arbeta med sådana verktyg som PhpMetrics och Scrutinizer men, som jag skrev i metrics rapporten, det vore bättre att kontrollera koden regelbundet istället för i slutet.


**Vilken är din TIL för detta kmom?**<br>
Att många if-satser försämrar kodskvalitet.<br>
Vad jag ska tänka på om jag vill skriva snygg kod. 